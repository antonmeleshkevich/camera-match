DEFINE_UI_PARAMS(red_r, Red-Red, DCTLUI_SLIDER_FLOAT, 1.0, -1.0, 3.0, 0.001)
DEFINE_UI_PARAMS(red_g, Red-Green, DCTLUI_SLIDER_FLOAT, 0.0, -2.0, 2.0, 0.001)
DEFINE_UI_PARAMS(red_b, Red-Blue, DCTLUI_SLIDER_FLOAT, 0.0, -2.0, 2.0, 0.001)
DEFINE_UI_PARAMS(red_rt_rg, Red-Root-Red-Green, DCTLUI_SLIDER_FLOAT, 0.0, -2.0, 2.0, 0.001)
DEFINE_UI_PARAMS(red_rt_gb, Red-Root-Green-Blue, DCTLUI_SLIDER_FLOAT, 0.0, -2.0, 2.0, 0.001)
DEFINE_UI_PARAMS(red_rt_rb, Red-Root-Red-Blue, DCTLUI_SLIDER_FLOAT, 0.0, -2.0, 2.0, 0.001)

DEFINE_UI_PARAMS(grn_r, Green-Red, DCTLUI_SLIDER_FLOAT,  0.0, -2.0, 2.0, 0.001)
DEFINE_UI_PARAMS(grn_g, Green-Green, DCTLUI_SLIDER_FLOAT,  1.0, -1.0, 3.0, 0.001)
DEFINE_UI_PARAMS(grn_b, Green-Blue, DCTLUI_SLIDER_FLOAT,  0.0, -2.0, 2.0, 0.001)
DEFINE_UI_PARAMS(grn_rt_rg, Green-Root-Red-Green, DCTLUI_SLIDER_FLOAT,  0.0, -2.0, 2.0, 0.001)
DEFINE_UI_PARAMS(grn_rt_gb, Green-Root-Green-Blue, DCTLUI_SLIDER_FLOAT,  0.0, -2.0, 2.0, 0.001)
DEFINE_UI_PARAMS(grn_rt_rb, Green-Root-Red-Blue, DCTLUI_SLIDER_FLOAT,  0.0, -2.0, 2.0, 0.001)

DEFINE_UI_PARAMS(blu_r, Blue-Red, DCTLUI_SLIDER_FLOAT,  0.0, -2.0, 2.0, 0.001)
DEFINE_UI_PARAMS(blu_g, Blue-Green, DCTLUI_SLIDER_FLOAT,  0.0, -2.0, 2.0, 0.001)
DEFINE_UI_PARAMS(blu_b, Blue-Blue, DCTLUI_SLIDER_FLOAT,  1.0, -1.0, 3.0, 0.001)
DEFINE_UI_PARAMS(blu_rt_rg, Blue-Root-Red-Green, DCTLUI_SLIDER_FLOAT,  0.0, -2.0, 2.0, 0.001)
DEFINE_UI_PARAMS(blu_rt_gb, Blue-Root-Green-Blue, DCTLUI_SLIDER_FLOAT,  0.0, -2.0, 2.0, 0.001)
DEFINE_UI_PARAMS(blu_rt_rb, Blue-Root-Red-Blue, DCTLUI_SLIDER_FLOAT,  0.0, -2.0, 2.0, 0.001)

__DEVICE__ float3 transform(int p_Width, int p_Height, int p_X, int p_Y, float p_R, float p_G, float p_B)
{
    float r = (p_R * red_r) + (p_G * red_g) + (p_B * red_b) + (_powf(p_R * p_G, 0.5) * red_rt_rg) + (_powf(p_G * p_B, 0.5) * red_rt_gb) + (_powf(p_R * p_B, 0.5) * red_rt_rb);
    float g = (p_R * grn_r) + (p_G * grn_g) + (p_B * grn_b) + (_powf(p_R * p_G, 0.5) * grn_rt_rg) + (_powf(p_G * p_B, 0.5) * grn_rt_gb) + (_powf(p_R * p_B, 0.5) * grn_rt_rb);
    float b = (p_R * blu_r) + (p_G * blu_g) + (p_B * blu_b) + (_powf(p_R * p_G, 0.5) * blu_rt_rg) + (_powf(p_G * p_B, 0.5) * blu_rt_gb) + (_powf(p_R * p_B, 0.5) * blu_rt_rb);
    return make_float3(r, g, b);
}